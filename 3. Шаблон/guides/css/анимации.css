/*----------------------Свойства Transition-------------------------------------------------------------------------------------------------------------------*/
/*Используется для изменения стилей плавно. */
/* За сколько.*/
    transition-duration: 1s, 1s; 

/* Для каких свойств.*/
    transition-property: background-color, box-shadow;

/* Через сколько начнется.*/
    transition-delay: 0s, 1s;

/* Как будет происходить анимация.*/
    transition-timing-function: ease;  /*(начинается медленно, разгоняется и замедляется).*/
    transition-timing-function: ease-in;    /*(начинается медленно, ускоряется в конце).*/
    transition-timing-function: ease-out; /*(начинается быстро и замедляется в конце).*/
    transition-timing-function: ease-in-out; /*(медленно начинается и медленно заканчивается).*/
    transition-timing-function: linear; /*(равномерно без колебаний в скорости).*/
    transition-timing-function: steps(3, start); /*(за 3 шага).*/
    transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55); /*(тут сужается, растягивается и сужается, как резина.)(можно найти в интернете примеры).*/

  /*transition: property duration function delay; можно через запятую для нескольких property.*/ 
  /*можно как на hover(при убирании курсора), так и на элемент(при наведении курсора и убирании(если есть на hover, то заменяется)).*/
  /*display не анимируется.*/
/*------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*----------------------Свойства Animation--------------------------------------------------------------------------------------------------------------------*/
/*Используется для изменения/задания новых стилей с помощью ключевых кадров. */
.example{
/*Имя keyframes.*/
   animation-name: white-circle;
   animation-name: none; /*(анимации не будет(можно повесить на hover)).*/

/*Длительность.*/
   animation-duration: 1s;

/*Как будет происходить.*/
   animation-timing-function: ease;

/*Сколько раз.*/
   animation-iteration-count: 3;
   animation-iteration-count: infinite;

/*Направление.*/
   animation-direction: alternate; /*(вперед и назад).*/
   animation-direction: reverse; /*задом наперед).*/

/*Состояние.*/
   animation-play-state: running; /*(по умолчанию).*/
   animation-play-state: paused; /*(останвливается(можно повесить на hover)).*/

/*Задержка.*/
   animation-delay: 2s; 

/*Поведение при завершении.*/
   animation-fill-mode: none; /*(по умолчанию, когда анимация кончится, к ней применятся первичные стили).*/
   animation-fill-mode: forwards; /*(когда анимация закончится, применятся стили последнего кадра).*/

/*Общая запись.*/
   animation name, duration, function, iteration, direction, delay, mode;
}

@keyframes white-circle{
   0%{
      left: 0;
   }
   100%{
      left: 500px;
   }
}

/*----------------------Свойства Transform--------------------------------------------------------------------------------------------------------------------*/
/*Используется для изменения положения/размера объекта не влияя на другие блоки. */
/*Transform применяется только для блочных элементов. */
/*Transform не влияет на другие блоки. */

.example{
/*2D-трансформация. */
/*Сдвинуть. */
   transform: translate(50px, 50px); /*50 вправо и 50 вниз.*/

   position: relative;
   left: 50%;
   transform: translate(-50%, 0px); /*сделает объект по центру(после left еще сдвинет его на 50% от твоей ширины).*/

/*Изменить масштаб. */
   transform: scale(2); /*увеличится в 2 раза(можно задавать для (x,y)).*/
   transform: scale(-1, 1); /*зеркально отразится по горизонтали(можно и по вертикали).*/

/*Повернуть. */
   transform: rotate(45deg); /*повернет на 45 градусов.*/

/*Забить гвоздь. */
   transform-origin: center; /*по умолчанию, поворот относительно центра(как будто там гвоздь).*/
   transform-origin: top left; /*повотор относительно верхнего левого угла.*/

/*Повернуть жестко. */
   transform: skew(30deg, 30deg); /*как бы поворачивает объект в 2D(наклонные края).*/

/*3-D трансформация. */
/*Сделать сразу несколько. */
   transform: matrix(scale_x, vertical_deformation, horiz_deformation, scale_y, vertical_deformation, horiz_deformation);

   transform: translate3D(20px, 20px, 50px);
   
   transform: scale3D(1, 1, 1);

   transform: rotate3D(1, 1, 1, 45deg); /*тут надо играться.*/

}